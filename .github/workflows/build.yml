name: Build

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v1.*'

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
      - name: Set up QEMU
        id: setup_qemu
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git status
        id: status
        run: git status

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/whmcs
          labels: |
            org.opencontainers.image.title=whmcs
            org.opencontainers.image.description=WHMCS Docker Image
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          tags: |
            type=semver,pattern={{raw}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=beta,enable=${{ github.ref == 'refs/heads/develop' }}

      - name: Login to GitHub Container Registry
        id: ghcr_login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate build date
        id: gen_date
        run: |
          BUILD_DATE=$(date '+%Y-%m-%dT%H:%M:%S%:z')
          echo "**** Setting build date to $BUILD_DATE ****"
          echo ::set-output name=build_date::${BUILD_DATE}

      - name: Build and push
        id: docker_build
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
          set: |
            image.args.BUILD_DATE=${{ steps.gen_date.outputs.build_date }}
          targets: publish
          push: true

      - name: Cleanup
        id: cleanup
        run: |
          rm -f ${HOME}/.docker/config.json
